<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.liuliume.portal.mybatis.mapper.AddressMapper" >


    <resultMap id="BaseResultMap" type="com.liuliume.portal.entity.Address" >
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="parent_id" property="parentId" jdbcType="VARCHAR" />
        <result column="level" property="level" jdbcType="CHAR" />
    </resultMap>
    <sql id="Base_Column_List" >
        id, name, parent_id, level
    </sql>

    <select id="count" resultType="int" parameterType="java.util.Map">
        select count(1) from address
        <where>
            <if test="param.cond != null">
                <if test="param.cond.addressMap != null">
                    <if test="param.cond.addressMap.name != null">
                        and name like CONCAT('%',#{param.cond.addressMap.name},'%')
                    </if>
                    <!-- add query cond here -->
                </if>
            </if>
        </where>
    </select>

    <select id="list" parameterType="java.util.Map" resultType="java.util.HashMap">
        select a1.*,a2.name as parent_name
        from address a1 left join address a2 on a2.id=a1.parent_id where 1=1
        <if test="param.cond != null">
            <if test="param.cond.addressMap != null">
                <if test="param.cond.addressMap.name != null">
                    and a1.name like CONCAT('%',#{param.cond.addressMap.name},'%')
                </if>
                <if test="param.cond.addressMap.parent_name != null">
                    and a2.name like CONCAT('%',#{param.cond.addressMap.parent_name},'%')
                </if>
                <!-- add query cond here -->
            </if>
        </if>
    </select>



  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from address
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from address
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.liuliume.portal.entity.Address" >
    insert into address (id, name, parent_id, 
      level)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}, 
      #{level,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.liuliume.portal.entity.Address" >
    insert into address
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="level != null" >
        level,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.liuliume.portal.entity.Address" >
    update address
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liuliume.portal.entity.Address" >
    update address
    set name = #{name,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=VARCHAR},
      level = #{level,jdbcType=CHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>