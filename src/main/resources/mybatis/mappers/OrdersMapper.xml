<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.liuliume.portal.mybatis.mapper.OrdersMapper">
	<resultMap id="orders" type="com.liuliume.portal.entity.Orders">
		<id column="order_id" property="orderId" jdbcType="VARCHAR" />
		<result column="account_id" property="accountId" jdbcType="INTEGER" />
		<result column="order_type" property="orderType" jdbcType="CHAR" />
		<result column="animals_id" property="animalsId" jdbcType="INTEGER" />
		<result column="animals_name" property="animalName" jdbcType="VARCHAR"/>
		<result column="province_id" property="provinceId" jdbcType="INTEGER" />
		<result column="city_id" property="cityId" jdbcType="VARCHAR" />
		<result column="area_id" property="areaId" jdbcType="VARCHAR" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="service_type" property="serviceType" jdbcType="INTEGER" />
		<result column="service_begin" property="serviceBegin"
			jdbcType="INTEGER" />
		<result column="service_end" property="serviceEnd" jdbcType="INTEGER" />
		<result column="start_date" property="startDate" jdbcType="VARCHAR" />
		<result column="end_date" property="endDate" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="payment_status" property="paymentStatus"
			jdbcType="INTEGER" />
		<result column="room_id" property="roomId" jdbcType="INTEGER" />
		<result column="course_id" property="courseId" jdbcType="INTEGER" />
		<result column="cost" property="cost" jdbcType="DOUBLE" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="last_modified" property="lastModified"
			jdbcType="TIMESTAMP" />
		<result column="hairdress_id" property="hairdressId" />
		<association property="account" resultMap="account"></association>
		<association property="room" resultMap="room"></association>
		<association property="course" resultMap="course"></association>
		<association property="hairdressing" resultMap="hairdressing"></association>
	</resultMap>

	<resultMap type="com.liuliume.portal.entity.Account" id="account">
		<id column="account_id" property="account_id" />
		<result column="mobile" property="mobile" />
		<result column="uniq_name" property="uniqname" />
	</resultMap>

	<resultMap id="room" type="com.liuliume.portal.entity.Room">
		<id column="room_id" property="id" jdbcType="INTEGER" />
		<result column="room_name" property="roomName" jdbcType="VARCHAR" />
		<result column="room_cost" property="cost" jdbcType="DOUBLE" />
		<result column="weixin_discount" property="weixinDiscount"
			jdbcType="DOUBLE" />
		<result column="discount_30" property="discount30" jdbcType="DOUBLE" />
		<result column="discount_90" property="discount90" jdbcType="DOUBLE" />
		<result column="discount_180" property="discount180" jdbcType="DOUBLE" />
		<result column="room_num" property="roomNum" jdbcType="INTEGER" />
	</resultMap>

	<resultMap id="course" type="com.liuliume.portal.entity.Course">
		<id column="course_id" property="id" jdbcType="INTEGER" />
		<result column="course_name" property="courseName" jdbcType="VARCHAR" />
		<result column="course_describe" property="courseDescribe"
			jdbcType="VARCHAR" />
		<result column="expense_course" property="expense" jdbcType="DOUBLE" />
	</resultMap>

	<resultMap id="hairdressing" type="com.liuliume.portal.entity.Hairdressing">
		<id column="hairdressing_id" property="id" jdbcType="INTEGER" />
		<result column="hairdressing_name" property="hairdressingName"
			jdbcType="VARCHAR" />
		<result column="hairdressing_describe" property="hairdressingDescribe"
			jdbcType="VARCHAR" />
		<result column="expense_hairdressing" property="expense" jdbcType="DOUBLE" />
	</resultMap>

	<sql id="list-where">
		<where>
			<if test="param.cond != null">
				<if test="param.cond.orders != null">
					<if
						test="param.cond.orders.orderId !=null and param.cond.orders.orderId > 0">
						and o.order_id = #{param.cond.orders.orderId}
					</if>
					<if test="param.cond.orders.createTime != null">
						and DATEDIFF(o.create_time ,
						#{param.cond.orders.createTime})=0
					</if>
					<if test="param.cond.orders.account != null">
						<if
							test="param.cond.orders.account.mobile != null and param.cond.orders.account.mobile != ''">
							and a.mobile = #{param.cond.orders.account.mobile}
						</if>
						<if
							test="param.cond.orders.account.uniqname != null and param.cond.orders.account.uniqname != ''">
							and a.uniq_name like
							CONCAT(#{param.cond.orders.account.uniqname},'%')
						</if>
					</if>
				</if>
			</if>
		</where>
	</sql>

	<select id="count" resultType="int">
		SELECT COUNT(1) FROM orders o
		LEFT JOIN account a ON o.`account_id` =
		a.`account_id` AND a.`flag` <![CDATA[<>]]>
		99
		<include refid="list-where"></include>
	</select>

	<select id="list" resultMap="orders">
		SELECT o.*,a.`account_id`,a.`mobile`,a.`uniq_name`,r.`id` AS
		room_id,r.`room_name`,r.cost AS room_cost,c.`id` AS
		course_id,c.`course_name`,c.`course_describe`,c.`expense` AS expense_course,
		h.`id` AS hairdressing_id,h.`hairdressing_describe`,h.`hairdressing_name`,h.`expense` AS expense_hairdressing,
		an.animals_name
		FROM orders o
		LEFT JOIN account a ON o.`account_id` = a.`account_id` AND
		a.`flag` <![CDATA[<>]]>
		99
		LEFT JOIN room r ON o.`room_id`=r.`id`
		LEFT JOIN course c ON
		o.`course_id` = c.`id`
		LEFT JOIN hairdressing h on o.`hairdress_id` = h.`id`
		LEFT JOIN animals an ON o.`animals_id` = an.`id`
		<include refid="list-where"></include>
		ORDER BY create_time DESC
		limit #{param.start},#{param.limit}
	</select>

	<select id="findOrdersByOrderId" resultMap="orders">
		SELECT o.*,a.`account_id`,a.`mobile`,a.`uniq_name`,r.`id` AS
		room_id,r.`room_name`,r.cost AS room_cost,c.`id` AS
		course_id,c.`course_name`,c.`course_describe`,c.`expense` AS expense_course,
		h.`id` AS hairdressing_id,h.`hairdressing_describe`,h.`hairdressing_name`,h.`expense` AS expense_hairdressing,
		an.animals_name
		FROM orders o
		LEFT JOIN account a ON o.`account_id` = a.`account_id` AND
		a.`flag` <![CDATA[<>]]>
		99
		LEFT JOIN room r ON o.`room_id`=r.`id`
		LEFT JOIN course c ON
		o.`course_id` = c.`id`
		LEFT JOIN hairdressing h on o.`hairdress_id` = h.`id`
		LEFT JOIN animals an ON o.`animals_id` = an.`id`
		WHERE o.order_id=#{orderId}
	</select>
	
	<select id="countHairDressingOrders" resultType="int">
		select count(*) from orders
		where order_type= 3 and status not in(-3,99)
		and start_date <![CDATA[<=]]>#{serviceDate} and end_date <![CDATA[>=]]>#{serviceDate}
		and (service_begin=#{startTime} or service_begin=#{startTime}+1 )
		and service_end <![CDATA[>=]]>#{endTime}
	</select>

    <select id="countRoomOrders" resultType="int">
      select count(*) from orders
      where order_type=1 and status!=-3 and status!=99
      and start_date <![CDATA[<=]]> #{startDate} and end_date <![CDATA[>=]]> #{startDate}
    </select>

	<!-- <insert id="insert" parameterType="com.liuliume.portal.entity.Orders" 
		> insert into orders (order_id, account_id, order_type, order_type_id, animals_id, 
		province, city, area, status, order_time, update_at, start_date, end_date, 
		day) values (#{orderId,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, #{orderType,jdbcType=CHAR}, 
		#{orderTypeId,jdbcType=INTEGER}, #{animalsId,jdbcType=INTEGER}, #{province,jdbcType=VARCHAR}, 
		#{city,jdbcType=VARCHAR}, #{area,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, 
		#{orderTime,jdbcType=TIMESTAMP}, #{updateAt,jdbcType=TIMESTAMP}, #{startDate,jdbcType=TIMESTAMP}, 
		#{endDate,jdbcType=TIMESTAMP}, #{day,jdbcType=INTEGER}) </insert> -->

</mapper>